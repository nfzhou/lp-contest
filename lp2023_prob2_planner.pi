import planner.

main =>
    read_input(M0),
    plan(M0,Plan,_),
    foreach (I in 1..3, J in 1..3)
        As = find_all(A,member({I,J,A},Plan)),
        foreach (A in As)
            printf("%d ", A)
        end,
        println(0)
    end.

final(M) =>
    foreach (I in 1..3, J in 1..3)
        M[I,J] == 9
    end.

action(M,M1,Action,Cost) =>
    between(1,3,I),
    between(1,3,J),
    M[I,J] < 9,
    between(1, 9-M[I,J],A),
    M1 = copy_term(M),
    Neibs = [(I1,J1) : (I1,J1) in [(I,J-1),(I,J+1),(I-1,J),(I+1,J)], I1 >= 1, I1 =< 3, J1 >= 1, J1 =< 3],
    M1[I,J] := M1[I,J] + A,
    foreach ((I1,J1) in Neibs)
        M1[I1,J1] := M1[I1,J1] + 1,
        M1[I1,J1] =< 9
    end,
    Action = {I,J,A},
    Cost = 1.

read_input(M) =>
    M = new_array(3,3),
    foreach (I in 1..3, J in 1..3)
        M[I,J] = to_int(read_line())
    end.

output(M) =>
    foreach (R in M)
        println(R)
    end.