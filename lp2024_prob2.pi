% https://github.com/nfzhou/lp-contest/blob/main/lp2024_problems.pdf

import sat.

main([File]) =>
    Is = read_file_terms(File),
    A = new_array(4,5),
    foreach (D in Is, D = $cell(R,C,V))
        A[R,C] = V
    end,
    Visited = new_array(4,5),
    Ps = [(I,J) : I in 0..3, J in 0..3, I <= J],
    plan(Ps,A,Visited,Plan),
    foreach ((R1,C1,R2,C2) in Plan)
        printf("tile(%d,%d,%d,%d).\n",R1,C1,R2,C2)
    end.

plan([],A,Visited,Plan) => Plan = [].
plan([(I,J)|Ps],A,Visited,Plan) =>
    lookup(I,J,A,Visited,R1,C1,R2,C2),
    Plan=[(R1,C1,R2,C2)|Plan1],
    plan(Ps,A,Visited,Plan1).

lookup(I,J,A,Visited,R1,C1,R2,C2) =>
    between(1,4,R1),
    between(1,5,C1),
    member((R2,C2),[(R1-1,C1), (R1+1,C1), (R1,C1-1), (R1,C1+1)]),
    R2 >= 1, R2 =< 4,
    C2 >= 1, C2 =< 5,
    (A[R1,C1] = I, A[R2,C2] = J; A[R1,C1] = J, A[R2,C2] = I),
    var(Visited[R1,C1]),
    var(Visited[R2,C2]),
    Visited[R1,C1] = 1,
    Visited[R2,C2] = 1.
